version: '3'

services:
  api:
    container_name: order-service
    depends_on:
      - "order_pg_db"
    build: .
    ports:
      - 3000:3000
    restart: always
    environment:
      DATABASE_NAME: pg_db
      DATABASE_HOST_DIRECT: pg_db
      HOSTNAME: pg_db

  order_pg_db:
    container_name: order_pg_db
    image: postgres:13.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: order_pg_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - order_pg_db:/var/lib/postgresql/data
  
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
    restart: always
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "9092:9092"
    expose:
      - "9092"
    environment:
      KAFKA_CREATE_TOPICS: "domain_orderservice_schedule_approved_0"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    restart: always
    container_name: kafka

volumes:
  order_pg_db:
